@model BananaStore.Models.LocationOrderFormViewModel
@{
    ViewData["Title"] = "Order Screen";
}
<h1 class="text-center">Order Screen</h1>
<div class="container">
    <div class="d-flex align-items-center flex-column justify-content-center">
        <div class="col-md-6 text-center"><strong class="text-warning">Customer Id : </strong>@Model.CustomerId</div>
        <div class="col-md-6 text-center"><strong class="text-warning">Customer Name : </strong>@Model.FirstName @Model.LastName</div>
    </div>
    <div class="d-flex align-items-center flex-column justify-content-center">
        <div class="">
            <strong class="text-warning">Order Number : </strong>@Model.OrderId
        </div>

        <div class="text-center">
            <strong class="text-warning"><h5>@Model.LocationName (Location @Model.LocationId)</h5></strong>
        </div>
        <div class="text-muted"><em>Order started on @Model.OrderDate</em></div>
    </div>
</div>
<form action="PlaceOrder" method="get" class="form-group needs-validation">
    <input type="hidden" id="CustomerId" name="CustomerId" value="@Model.CustomerId" />
    <input type="hidden" id="FirstName" name="FirstName" value="@Model." />
    <input type="hidden" id="LastName" name="LastName" value="@Model.LastName" />
    <input type="hidden" id="LocationId" name="LocationId" value="@Model.LocationId" />
    <input type="hidden" id="LocationName" name="LocationName" value="@Model.LocationName" />
    <input type="hidden" id="OrderId" name="OrderId" value="@Model.OrderId" />
    <input type="hidden" id="OrderDate" name="OrderDate" value="@Model.OrderDate" />
    <table class="table border-outline-warning">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LocationStock.First().ProductId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LocationStock.First().ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LocationStock.First().ProductDesc)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LocationStock.First().Quantity)
                </th>
                <th>
                    Customer Order Amount
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.LocationStock)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductDesc)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        <input class="" type="number" name="PN@(item.ProductId.ToString().Substring(0, 4))" min="0" max="@item.Quantity"  />
                    </td>
                </tr>
            }
        </tbody>
    </table>
     <button class="btn btn-outline-warning" value="Submit">Place Order</button>
    </form>






    @*@foreach (var item in Model.LocationStock)
        {

            <div>@item.ProductId</div><div>@item.ProductName</div><div>In Stock: @item.Quantity</div><div>Order Amount: <input class="" type="number" name="PN@(item.ProductId.ToString().Substring(0, 4))" min="0" max="@item.Quantity" /><div class="invalid-feedback">Please enter a valid number from 0 - @item.Quantity</div></div>
        }*@



